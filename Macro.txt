Option Explicit
Dim FoundCell As Excel.Range
Dim ws As Excel.Worksheet

Sub MarkNegativeGP()
'
' MarkNegativeGP Macro
' This fills any cells with a negative GP purple



    With Columns("I:I")
        .FormatConditions.Delete ' Removes any conditional formatting that may exist (Mostly a safeguard)
        With .FormatConditions.Add(Type:=xlCellValue, Operator:=xlLess, Formula1:="=0") ' Condition searches for any cells with a negative value
            With .Interior
                .Color = 16751052 ' The fill color
                .TintAndShade = 0
            End With
            .StopIfTrue = False ' Only used with multiple conditional formatting rules (To prevent further formatting of cells that are true in the first pass)
        End With
    End With

End Sub

Sub MakeCurrency()
'
' MakeCurrency Macro
' This sets the number format to currency for legibility
' Double check what should be used here

    Range("G:G,J:J,K:K").Style = "Currency"
    Range("G:G,J:J,K:K").NumberFormat = "$#,##0.00" ' This is probably the correct one, but confirm this

End Sub

Sub FindFirstInstance()

' This is what indicates the beginning of the table
Const WHAT_TO_FIND As String = "Product"

Set ws = ActiveSheet ' Shorthand for the sheet

Set FoundCell = ws.Range("A:A").Find(What:=WHAT_TO_FIND, LookAt:=xlWhole) ' Identifies the header row of the table

Exit Sub
End Sub

Sub ContractRenewal()
Dim TableStart As Long
Dim TableEnd As Long
Dim WholeTable As Range
Dim CurrentRow As Long
Dim SaveName As String
'
' ContractRenewal Macro
'

    ' Locate header row of the table

    FindFirstInstance

    ' Identify the starting and ending row of the table

    TableStart = FoundCell.Offset(1, 0).Row
    TableEnd = ws.Range("N" & ws.Rows.Count).End(xlUp).Offset(1, 0).Row

    'Set the entire range of the table

    Set WholeTable = Range("A" & TableStart, "W" & TableEnd)

    ' Insert the column for calculated values

    Columns("O:O").Insert Shift:=xlToRight

    ' Insert the actual formula

    Range("O" & TableStart, "O" & (TableEnd - 1)).FormulaR1C1 = "=(RC[-1]-RC[-4])/RC[-1]"

    ' Clear the changes column and the last row with totals

    Range("N" & TableStart, "N" & TableEnd).ClearContents
    Rows(TableEnd).ClearContents

    ' Clear any sorting that may exist

    ws.Sort.SortFields.Clear

    ' Sort the entire table by the Sold column (E), from largest to smallest

    WholeTable.Sort Key1:=Range("E" & TableStart, "E" & TableEnd), Order1:=xlDescending, DataOption1:=xlSortNormal

    ' This next loop is used to color lines without any sales in the past year red
    ' First, set the counter / placeholder variable to be equal with the first data row of the table

    CurrentRow = TableStart

    ' Next, this iterates through the table and, if the sales column is blank, changes the font color to bright red

    Do While CurrentRow < TableEnd
        If IsEmpty(Cells(CurrentRow, "E")) Then
            With Rows(CurrentRow).Font
                .Color = 255
                .TintAndShade = 0
            End With
        End If
            CurrentRow = CurrentRow + 1
    Loop

    ' MakeCurrency marks the appropriate rows with a currency style
    ' MarkNegativeGP fills any cells with a negative gross profit ratio purple

    MakeCurrency
    MarkNegativeGP

    ' Saves the file using the contract name
    SaveName = ws.Range("A2").Value
    ws.Parent.SaveAs Filename:="D:\" & SaveName & ".xlsx", FileFormat:=51 ' 51 is the enumeration for .xlsx files

    ' This still needs an input box for the worker to input the Sales Representative,
    ' as well as rules to save to a folder based on what the worker inputs.

    ' It also would be nice if this could process all files in a folder, or all open Excel workbooks (for batching)
    ' It would also be nice if this would notify the user that the workbook has been saved, and ask them if they would like to email the workbook
    ' Finally, it would be nice if this could set the subject line and recipient (and maybe even add the text that Christina Schauer uses as a signature) in Outlook, to streamline the process as much as possible.
    End Sub
